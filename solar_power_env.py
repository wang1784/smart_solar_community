from get_comed_data import get_comed_data
import pandas as pd
# from get_solar_data import get_solar_data
#
def combine_data():
    df_comed = get_comed_data().account_hourly()
    df_solar = pd.read_csv('solar_data.csv', names = ['Datetime', 'SOLAR_W']).drop(0)
    df_solar['Datetime'] = df_solar['Datetime'].str.replace('-06:00', '')
    df_solar.set_index('Datetime', inplace = True)
    df_join = df_comed.join(df_solar, how = 'inner', sort = True)
    print(df_join.head())
    print(df_join.describe())

class solar_power_env():
    def __init__(self, df_join, modules):
        #df_join is the dataframe that contains data from COMED and SOLAR
        #modules is an integer for how many modules we want for each household
        self._data = df_join
        self._data = self._data['SOLAR_W'] * modules
        self._battery_cap = 1200


    def get_reward(self, state, action):
        #action is either 0 (discharging the battery) or 1 (charging the battery)
        #state = (p_solar, p_load, p_battery)
        p_solar = state[0] #power generated by solar panel
        p_load = state[1] #power consumption
        p_battery = state[2] #power stored in battery currently

        if action: #if action is charging
            reward = min(p_solar, max(0, self._battery_cap - p_battery))
        else: #if action is discharging
            reward = min(p_load, p_battery)
        return reward

    def step(self):

combine_data()